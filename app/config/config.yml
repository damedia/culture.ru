imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:         ~
#        domain:      %domain%

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        progorod_api_key: %progorod_api_key%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    #bundles:        [ "FOSCommentBundle", "ArmdCommunicationPlatformBundle" ]
    #bundles: [ "FOSCommentBundle", "ArmdCommentBundle" ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }
    
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true
            tree: true
            timestampable: true

sonata_admin:
    security:
        handler: sonata.admin.security.handler.noop
    title:      Sonata Project
    title_logo: /bundles/sonataadmin/logo_title.png
    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }
    templates:
        layout:  ::admin_base.html.twig

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

sonata_user:
    security_acl: true
    class:
        user:   Armd\UserBundle\Entity\User
        group:  Armd\UserBundle\Entity\Group
    impersonating_route:    armd_news_list_index
    profile:
        form:
            type: armd_user_profile

    
sonata_media:
    default_context: news
    db_driver: doctrine_orm # or doctrine_mongodb
    contexts:
        default:  # the default context is mandatory
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                adminPreview: { width: 314, height: 187, quality: 90}

        news:
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                adminPreview: { width: 314 , height: 187, , quality: 90}            
                billboard: { width: 366, height: 261}
                latest: { width: 85, height: 65 }
                list: { width: 160, height: 107 }
                big: { width: 920 }
                thumbnail: { width: 85, height: 85 }				

        chronicle:
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                adminPreview: { width: 314 , height: 187, , quality: 90}
                list: { width: 592 }

        atlas:
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                image3d: { width: 405 }
                big: { width: 920 }
                thumbnail: { width: 85, height: 85 }
                imagesOfRussia: { width: 242, height: 187}
                imagesOfRussiaSmall: {width: 85, height: 61}
                imagesOfRussiaUnderMap: {width: 127, height: 107}

        atlas_icon:
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                default: {width: 27, height: 45}


        lecture:
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.file
                - sonata.media.provider.image
            formats:
                big: { width: 335, height: 189 }
                medium: { width: 111 }
                small: { width: 85 }

        gallery:
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                big: { width: 920 }
                thumbnail: { width: 85, height: 85 } 			



    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true

#    class:
#        media: "Armd\\Bundle\\MediaBundle\\Entity\\Media"
#        gallery: "Armd\\Bundle\\MediaBundle\\Entity\\Gallery"
#        gallery_has_media: "Armd\\Bundle\\MediaBundle\\Entity\\GalleryHasMedia"

    providers:
        file:
            resizer:    false
            filesystem: sonata.media.filesystem.local
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format

        image:
            resizer:    sonata.media.resizer.simple # sonata.media.resizer.square
            filesystem: sonata.media.filesystem.local
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format

        youtube: ~

        dailymotion: ~    

fos_user:
    db_driver:      orm
    firewall_name:  main
    user_class:     Armd\UserBundle\Entity\User

    group:
        group_class: Armd\UserBundle\Entity\Group
        
    registration:
        form:
            type:   armd_user_registration        

fos_comment:
    db_driver: orm
    class:
        model:
            comment: Armd\CommentBundle\Entity\Comment
            thread: Armd\CommentBundle\Entity\Thread
            vote: Armd\CommentBundle\Entity\Vote
    acl: true
    service:
        manager:
            thread: fos_comment.manager.thread.acl
            comment: fos_comment.manager.comment.acl
            vote: fos_comment.manager.vote.acl

fos_rest:
    view:
        view_response_listener: force

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }

knp_paginator:
    template: 
        pagination: "::pagination.html.twig"

armd_tvigle_video:
    api_service_url: http://pub.tvigle.ru/soap/index.php?wsdl
    api_login: Stella_l
    api_password: armada

armd_sphinx_search:
    indexes:
        All:
            %sphinxsearch_index_all%: ~
        Lectures:
            %sphinxsearch_index_lectures%: ~
        Atlas:
            %sphinxsearch_index_atlas%: ~

    searchd:
        host:   %sphinxsearch_host%
        port:   %sphinxsearch_port%
    indexer:
        bin:    %sphinxsearch_indexer_bin%


parameters:
    sonata.user.admin.user.class: Armd\UserBundle\Admin\Entity\UserAdmin
