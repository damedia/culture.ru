{% block fos_comment_comment %}
<li id="fos_comment_{{ comment.id }}" class="fos_comment_comment_show fos_comment_comment_depth_{{ depth }}" {% if parentId is defined %}data-parent="{{ parentId }}"{% endif %}>
    

    <div class="comment">
        {% block fos_comment_comment_body %}
            
                {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                    {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                {% else %}
                    {% if comment is fos_comment_raw %}
                        {{ comment.rawBody | raw }}
                    {% else %}
                        {{ comment.body | nl2br }}
                    {% endif %}
                {% endif %}
            
        {% endblock fos_comment_comment_body %}
    </div>

	<div class="comment-author">
        {% block fos_comment_comment_metas %}

            {% block fos_comment_comment_metas_authorline %}
                <p><a href="#" class="author fb">{{ comment.authorName }}</a> <span class="comment-date">{{ comment.createdAt|date('d.m.Y') }}</span></p>
                {#
                <span class="fos_comment_comment_authorname">
                    {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                        {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                    {% else %}
                        {{ comment.authorName }}
                    {% endif %}
                </span> - {{ comment.createdAt|date }}
                #}
            {% endblock fos_comment_comment_metas_authorline %}

            {% block fos_comment_comment_metas_edit %}
                {% if fos_comment_can_edit_comment(comment) %}
{#
                    <button data-url="{{ url("fos_comment_edit_thread_comment", {"id": comment.thread.id, "commentId": comment.id}) }}" class="fos_comment_comment_edit_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_edit{% endtrans %}</button>
#}
                {% endif %}
            {% endblock fos_comment_comment_metas_edit %}

            {% block fos_comment_comment_metas_delete %}
                {% if fos_comment_can_delete_comment(comment) %}
                    {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                        {# undelete #}
                        <button data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value": constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_VISIBLE') }) }}" class="fos_comment_comment_remove">{% trans from 'FOSCommentBundle' %}fos_comment_comment_undelete{% endtrans %}</button>
                    {% else %}
                        {# delete #}
{#                        
                        <button data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value":  constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')}) }}" class="fos_comment_comment_remove">{% trans from 'FOSCommentBundle' %}fos_comment_comment_delete{% endtrans %}</button>
#}                        
                    {% endif %}
                {% endif %}
            {% endblock fos_comment_comment_metas_delete %}

        {% endblock fos_comment_comment_metas %}
    </div>
	
    {% block fos_comment_comment_metas_voting %}
        <div class="fos_comment_comment_voting">
            {% if fos_comment_can_vote(comment) %}
                <div class="comment-voting">
                    <div class="vote down"><button data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": -1}) }}" class="fos_comment_comment_vote"><span>{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_votedown{% endtrans %}</span></button></div>
                    <div class="vote up"><button data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": 1}) }}" class="fos_comment_comment_vote"><span>{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_voteup{% endtrans %}</span></button></div>
                    <span class="separator">/</span>
                    <span id="fos_comment_score_{{ comment.id }}" class="total">
                        {% include "FOSCommentBundle:Thread:comment_votes.html.twig" with { 'commentScore': comment.score } %}
                    </span>
                </div>
            {% endif %}
        </div>
    {% endblock fos_comment_comment_metas_voting %}

    {% block fos_comment_comment_children %}
        {% if view is not sameas('flat') %}
            <div class="fos_comment_comment_replies">

                {% if fos_comment_can_comment(comment) %}
                    <div class="fos_comment_comment_reply" style="clear:both;">
                        {% block fos_comment_comment_reply %}
{#                        
                            <button data-url="{{ url('fos_comment_new_thread_comments', {"id": comment.thread.id}) }}" data-name="{{ comment.authorName }}" data-parent-id="{{ comment.id }}" class="fos_comment_comment_reply_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_reply{% endtrans %}</button>
#}                            
                        {% endblock fos_comment_comment_reply %}
                    </div>
                {% endif %}

                {% if children is defined %}
                    {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parentId": comment.id, "view": view } %}
                {% endif %}

            </div>
        {% elseif view is sameas('flat') and children is defined %}
            {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parentId": comment.id, "view": view } %}
        {% endif %}
    {% endblock fos_comment_comment_children %}

</li>
{% endblock fos_comment_comment %}
