<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20130208145858 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "postgresql");
        
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (1, 'праздники')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (2, 'соревнования')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (3, 'церемонии')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (4, 'выставки')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (5, 'симпозиумы')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (6, 'шоу')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (7, 'фест музыка (танцы)')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (8, 'фест военно-исторический')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (9, 'фест по этнике')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (10, 'ислам')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (11, 'буддизм')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (12, 'православие')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (13, 'католицизм')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (14, 'лютеранство')");
        $this->addSql("INSERT INTO content_news_theme (id, title) VALUES (15, 'англиканство')");
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "postgresql");
    }
}
