<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;
use PDO;

/**
 * Data fix migration.
 * Fixes already registered social users
 */
class Version20120920121816 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        $qb = $this->connection->createQueryBuilder();

        // select users with not filled social uid
        $qb->select('u.*')
            ->from('fos_user_user', 'u')
            ->where($qb->expr()->orX(
                $qb->expr()->like('u.username', "'vk%'"),
                $qb->expr()->like('u.username', "'fb%'"),
                $qb->expr()->like('u.username', "'tw%'")
            ))
            ->andWhere('u.twitter_uid IS NULL')
            ->andWhere('u.vkontakte_uid IS NULL')
            ->andWhere('u.facebook_uid IS NULL')
        ;


        $users = $qb->execute()->fetchAll(PDO::FETCH_ASSOC);
        foreach ($users as $user) {
            if (preg_match('~(\w\w)(\d+)~', $user['username'], $matches)) {
                if($matches[1] === 'fb') {
                    $fieldName = 'facebook_uid';
                } elseif($matches[1] === 'tw') {
                    $fieldName = 'twitter_uid';

                } elseif ($matches[1] === 'vk') {
                    $fieldName = 'vkontakte_uid';
                } else {
                    continue;
                }
                $this->addSql("UPDATE fos_user_user SET $fieldName = '{$matches[2]}' WHERE id = {$user['id']}");
            }
        }

    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs

    }
}
