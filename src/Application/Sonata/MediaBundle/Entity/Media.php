<?php
/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\MediaBundle\Entity;

use Sonata\MediaBundle\Entity\BaseMedia as BaseMedia;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Media extends BaseMedia
{

    /**
     * @var integer $id
     */
    protected $id;

    private $formImageFile;

    private $mediaImageBeforeUpdate;

    private $removeMedia;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    public function getFormImageFile()
    {
        return $this->formImageFile;
    }


    public function setFormImageFile(\Symfony\Component\HttpFoundation\File\UploadedFile $formImageFile)
    {
        // save previous state to be able clean files in MediaListener
        $this->mediaImageBeforeUpdate = clone $this;

        $this->formImageFile = $formImageFile;
        $this->setBinaryContent($formImageFile);
        $this->setContext('default');
        $this->setProviderName('sonata.media.provider.image');
    }

    public function getMediaImageBeforeUpdate()
    {
        return $this->mediaImageBeforeUpdate;
    }

    public function resetMediaImageBeforeUpdate()
    {
        $this->mediaImageBeforeUpdate = null;
    }

    public function getRemoveMedia()
    {
        return $this->removeMedia;
    }

    public function setRemoveMedia($removeMedia)
    {
        // change persistent property to fire MediaListener
        $this->setHeight($this->getHeight() + 1);

        $this->removeMedia = $removeMedia;
    }


}