{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'SonataAdminBundle:CRUD:edit.html.twig' %}


{% block actions %}
    <div class="sonata-actions">
        {% if admin.hasroute('show') and admin.id(object) and admin.isGranted('VIEW', object) and admin.show|length > 0 %}
            <a class="btn sonata-action-element" href="{{ admin.generateObjectUrl('show', object) }}">
                <i class="icon-zoom-in"></i>
                {{ 'link_action_show'|trans({}, 'SonataAdminBundle') }}</a>
                
            {% if (has_change_history(object)) %}
                <a class="btn sonata-action-element view-history" href="{{ path('ru__RG__admin_armd_main_changehistory_list', { 'entity_id' : admin.id(object), 'entity_class' : object.className }) }}">
                    <i class="icon-zoom-in"></i>
                    {{ 'link_action_view_history'|trans({}, 'SonataAdminBundle') }}</a>
            {% endif %}
             <a  class="btn sonata-action-element" href="#" id="dcx-search-article">
                <i class="icon-plus"></i>
                Добавить статью по DCX
             </a>
             <div id="dialog-form" title="Поиск статьи по DCX">
              <p class="validateTips">Введите DcxID статьи</p>
              <form id = "form-submit-id" action="{{ admin.generateUrl('addArticle')}}" method="post">
                <fieldset>
                  <label for="name">DCX ID</label>
                  <input type="text" name="name" id="dcx_id" class="text ui-widget-content ui-corner-all">
                </fieldset>
              </form>
            </div>            
            
        {% endif %}

        {% if admin.hasroute('history') and admin.id(object) and admin.isGranted('EDIT', object) %}
            <a class="btn sonata-action-element" href="{{ admin.generateObjectUrl('history', object) }}">
                <i class="icon-book"></i>
                {{ 'link_action_history'|trans({}, 'SonataAdminBundle') }}</a>
        {% endif %}
        {% include 'SonataAdminBundle:Core:create_button.html.twig' %}
        {% if admin.hasroute('list') and admin.isGranted('LIST')%}
            <a class="btn sonata-action-element" href="{{ admin.generateUrl('list') }}">
                <i class="icon-list"></i>
                {{ 'link_action_list'|trans({}, 'SonataAdminBundle') }}</a>
        {% endif %}
    </div>
{% endblock %}

{% block form %}

    {% if (has_change_history(object)) %}
 
        <div id="history-list" style="display:none;"></div>
        <div id="history-view" style="display:none;"></div>
        
    {% endif %}
    
    {{ block('parentForm') }}
    
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(function(){
           
            $('a.view-history').on('click', function(){
                $('#history-list').load($(this).attr('href'), function(responseText, textStatus, XMLHttpRequest){
                    $('#history-list').show('slow');
                });
                return false;
            });
            
            $('#history-list').on('click', 'a.hide-history', function(){
                $(this).closest('#history-list').hide('slow', function(){
                    $(this).html(null);
                });
                return false;                 
            });
            
            $('#history-list').on('click', 'a.view_link', function(){
                
                $.post($(this).attr('href'), function(data, textStatus, jqXHR){
                    $('#history-view').html(data);
                    $('#history-view').dialog({width: 800, closeOnEscape: true});
                });
                return false;
            });
            
            $('#history-list').on('click', '.pagination a', function(){
                var t = $(this).attr('href').split('?'),
                    query_param = (t.length > 1) ? t[1].split('&') : null,
                    page = 1,
                    per_page = 0;

                if (query_param.length > 0)
                {
                    for (var i=0; i<query_param.length; i++)
                    {
                        var param = query_param[i].split('=');
                        if (param[0] == 'filter%5B_page%5D')
                            page = param[1];
                        else if (param[0] == 'filter%5B_per_page%5D')
                            per_page = param[1];
                    }
                }
                $('#history-list').load($('a.view-history').attr('href')+'&filter[_page]='+page+'&filter[_per_page]='+per_page);
                return false;            
            });
            var name = $( "#dcx_id" ),
            allFields = $( [] ).add( name ),
            tips = $( ".validateTips" );
            $( "#dialog-form" ).dialog({
              autoOpen: false,
              height: 250,
              width: 300,
              modal: true,
              buttons: {
                "Search": function() {
                    var bValid = true;
                    allFields.removeClass( "ui-state-error" );
                    bValid = bValid && checkLength( name, "DCX ID", 0);
                    if ( bValid ) {
                      $('#form-submit-id').submit();
                    }
                },
                Cancel: function() {
                  $( this ).dialog( "close" );
                }
              },
              close: function() {
                allFields.val( "" ).removeClass( "ui-state-error" );
              }
            });
            $( "#dcx-search-article" )
              .button()
              .click(function() {
                $( "#dialog-form" ).dialog( "open" );
            });

            $('#form-submit-id').ajaxForm({
                dataType: 'json',
                success: function(response, statusText, xhr, $form){
                    if(!response.success){
                      name.addClass( "ui-state-error" );
                      updateTips(response.error);
                    }
                    else{
                      location.href = "{{ admin.generateUrl('addArticle')}}";
                    }
                }
            });

            function updateTips( t ) {
              tips
                .text( t )
                .addClass( "ui-state-highlight" );
              setTimeout(function() {
                tips.removeClass( "ui-state-highlight", 1500 );
              }, 500 );
            }

            function checkLength( o, n, min) {
              if ( o.val().length <= min) {
                o.addClass( "ui-state-error" );
                updateTips( "Поле " + n + " не может быть пустым" );
                return false;
              } else {
                return true;
              }
            }
            
        });
    
    </script>    
{% endblock %}    
