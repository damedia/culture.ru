<?php
namespace Armd\PaperArchiveBundle\Manager;

use Doctrine\ORM\EntityManager;
use Armd\PaperArchiveBundle\Entity\PaperArchive;
use Application\Sonata\MediaBundle\Entity\Media;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\HttpFoundation\File\UploadedFile;

class PaperArchiveManager
{
    private $em;

    public function __construct(EntityManager $em, Container $container)
    {
        $this->em = $em;
        $this->container = $container;
    }

    public function createPreview(PaperArchive $entity){
        $image = $this->createImage($entity->getFile());
        $media = $this->createMedia($image, $entity->getTitle());
        $this->addMediaToEntity($media->getId(), $entity->getId());
        unlink($image);
    }

    public function makeFilePath($file)
    {
        $pathGenerator = $this->container->get('sonata.media.generator.default');
        $path = $this->container->get('sonata.media.twig.extension')->path($file, 'reference');
        $path = __DIR__.'/../../../../web'.$path;
        return $path;
    }

    public function createImage($file)
    {
        $path = $this->makeFilePath($file);
        $gm = new \Imagick();
        $gm->readImage($path.'[0]');
        $gm->setImageFormat("jpg");
        $gm->setCompressionQuality(100);
        $tmpfile = sys_get_temp_dir()."/AutogeneratedPreview.jpg";
        $gm->writeImage($tmpfile);
        return $tmpfile;
    }

    public function createMedia($image, $title)
    {
        $media = new Media();
        $mediaFile = new UploadedFile($image, $image);
        $media->setBinaryContent($mediaFile);
        $media->setContext('paper_archive');
        $media->setTitle($title);
        $media->setProviderName('sonata.media.provider.image');
        $mediaManager = $this->container->get('sonata.media.manager.media');
        $mediaManager->save($media);
        return $media;
    }

    public function addMediaToEntity($mediaId, $entityId)
    {
        return $this->em->createQuery('
                UPDATE ArmdPaperArchiveBundle:PaperArchive p
                SET p.image = :imageId
                WHERE p.id = :entityId'
            )->setParameters(array(
                'imageId' => $mediaId,
                'entityId' => $entityId
            ))->getResult();
    }
}